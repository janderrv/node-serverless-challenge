org: janderrv
app: node-serverless-challenge
service: node-serverless-challenge

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'employees-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true
      inMemory: true
    stages:
      - ${self:provider.stage}

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["EmployeesDynamoDBTable", "Arn" ] }
  environment:
    EMPLOYEES_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: src/main/index.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'
  getUser:
    handler: src/main/index.handler
    events:
      - http: 'GET /employees/{proxy+}'
  createUser:
    handler: src/main/index.handler
    events:
      - http: 'POST /employees'

resources:
  Resources:
    EmployeesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}